# This is a basic workflow that is manually triggered

name: Environment Variable workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      my_vars:
        description: "VARIABLES TO RETRIEVE: "  
        required: true
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # env:
    #   GH: ${{ vars.GREET }} 
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Read a variable
      run: echo "${{ vars.MEDIUM }} ITS ME!"

    # - name: READING VARIABLE FROM THE ENV
      # run: echo "Hello $${{ env.GH }}"

      
    - name: Print specific variables
      run: |
          for var in VAR1 VAR2; do
            echo "$var: ${!var}"
          done
          
      env:
          VAR1: ${{ vars.GREET }}
          VAR2: ${{ vars.MEDIUM }}
          # VAR3: ${{ vars.VAR3 }}

    # - name: Print variables 
         
    # - name: Print VARIABLES AT REPOSITORY LEVEL
    #   # env:
    #   #     SECRETS: '${{ toJson(secrets) }}'
    #   #     # INPUT_SECRETS_LIST: '${{ github.event.inputs.secrets_list }}'
         
    #   run: |
    #       IFS=',' read -ra string_array <<< ${{ github.event.inputs.my_vars }}

    #       for vari in "${string_array[@]}"; do
    #         value="$(jq -r --arg key "$vari" '.[$key]' <<< "$my_vars" | sed 's|.|& |g')"
    #         echo "$vari: $value"
    #         # echo "$secret=$value" >> $GITHUB_ENV
    #       done

    - name: Print input variables
      run: |
          IFS=',' read -ra vars_array <<< "${{ github.event.inputs.my_vars }}"
          for var in "${vars_array[@]}"; do
            # value="${var}"
            value=$(eval echo \$$var)
            echo "$var: $value"
          done  
    
